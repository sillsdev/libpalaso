//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SIL.Settings;

namespace TestApp.Properties {


	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
	internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {

		private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

		public static Settings Default {
			get {
				return defaultInstance;
			}
		}

		[global::System.Configuration.UserScopedSettingAttribute()]
		[global::System.Configuration.SettingsProviderAttribute(typeof(CrossPlatformSettingsProvider))]
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.Configuration.DefaultSettingValueAttribute("True")]
		public bool NeedsUpgrade {
			get {
				return ((bool)(this["NeedsUpgrade"]));
			}
			set {
				this["NeedsUpgrade"] = value;
			}
		}

		[global::System.Configuration.UserScopedSettingAttribute()]
		[global::System.Configuration.SettingsProviderAttribute(typeof(CrossPlatformSettingsProvider))]
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public global::SIL.Reporting.ReportingSettings ReportingSettings {
			get {
				return ((global::SIL.Reporting.ReportingSettings)(this["ReportingSettings"]));
			}
			set {
				this["ReportingSettings"] = value;
			}
		}
	}
}
