//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIL.Archiving.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIL.Archiving.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///{&quot;protocol&quot;:&quot;AILCA&quot;,&quot;documentation&quot;:&quot;ailca.html&quot;,&quot;choices&quot;:[
        ///	{&quot;label&quot;:&quot;F&quot;,&quot;description&quot;:&quot;access is Free to all&quot;},
        ///	{&quot;label&quot;:&quot;U&quot;,&quot;description&quot;:&quot;all Users can access (requires registration)&quot;},
        ///	{&quot;label&quot;:&quot;RC&quot;,&quot;description&quot;:&quot;Researchers and Community members are allowed access&quot;},
        ///	{&quot;label&quot;:&quot;C&quot;,&quot;description&quot;:&quot;only Community members are allowed access (normally requires application to Depositor)&quot;},
        ///	{&quot;label&quot;:&quot;S&quot;,&quot;description&quot;:&quot;only Subscribers are allowed access (requires application to Depositor)&quot;},
        ///	{ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AccessProtocols {
            get {
                return ResourceManager.GetString("AccessProtocols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;&lt;/head&gt;
        ///	&lt;style&gt;
        ///		body {
        ///			margin: 0;
        ///		}
        ///		body, table {
        ///			font-size: 12px;
        ///			font-family: &apos;Segoe UI&apos;, &apos;Tahoma&apos;, &apos;Arial&apos;, &apos;Helvetica&apos;, sans-serif;
        ///		}
        ///		td {
        ///			vertical-align: top;
        ///		}
        ///		.bold {
        ///			font-weight: 700;
        ///		}
        ///		.space-before {
        ///			padding-top: 10px;
        ///		}
        ///		.fixed {
        ///			font-family: &apos;Consolas&apos;, &apos;DejaVu Sans Mono&apos;, monospace;
        ///		}
        ///	&lt;/style&gt;
        ///	&lt;body style=&quot;background-color: rgb(230, 150, 100)&quot;&gt;
        ///		&lt;table&gt;
        ///			&lt;tr&gt;
        ///				&lt;td colspan=&quot;3&quot; class=&quot;bold&quot;&gt;Name:&lt;/td&gt;
        ///		 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ailca {
            get {
                return ResourceManager.GetString("ailca", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;&lt;/head&gt;
        ///	&lt;style&gt;
        ///		body {
        ///			margin: 0;
        ///		}
        ///		body, table {
        ///			font-size: 12px;
        ///			font-family: &apos;Segoe UI&apos;, &apos;Tahoma&apos;, &apos;Arial&apos;, &apos;Helvetica&apos;, sans-serif;
        ///		}
        ///		td {
        ///			vertical-align: top;
        ///		}
        ///		.bold {
        ///			font-weight: 700;
        ///		}
        ///		.space-before {
        ///			padding-top: 10px;
        ///		}
        ///		.fixed {
        ///			font-family: &apos;Consolas&apos;, &apos;DejaVu Sans Mono&apos;, monospace;
        ///		}
        ///		.nowrap { white-space: nowrap; }
        ///	&lt;/style&gt;
        ///	&lt;body style=&quot;background-color: rgb(230, 150, 100)&quot;&gt;
        ///		&lt;table&gt;
        ///			&lt;tr&gt;
        ///				&lt;td col [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ailla {
            get {
                return ResourceManager.GetString("ailla", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;&lt;/head&gt;
        ///	&lt;style&gt;
        ///		body {
        ///			margin: 0;
        ///		}
        ///		body, table {
        ///			font-size: 12px;
        ///			font-family: &apos;Segoe UI&apos;, &apos;Tahoma&apos;, &apos;Arial&apos;, &apos;Helvetica&apos;, sans-serif;
        ///		}
        ///		td {
        ///			vertical-align: top;
        ///		}
        ///		.bold {
        ///			font-weight: 700;
        ///		}
        ///		.space-before {
        ///			padding-top: 10px;
        ///		}
        ///		.fixed {
        ///			font-family: &apos;Consolas&apos;, &apos;DejaVu Sans Mono&apos;, monospace;
        ///		}
        ///		.nowrap { white-space: nowrap; }
        ///	&lt;/style&gt;
        ///	&lt;body style=&quot;background-color: rgb(230, 150, 100)&quot;&gt;
        ///		&lt;table&gt;
        ///			&lt;tr&gt;
        ///				&lt;td col [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string anla {
            get {
                return ResourceManager.GetString("anla", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///{&quot;protocol&quot;:&quot;Custom&quot;,&quot;documentation&quot;:&quot;&quot;,&quot;choices&quot;:[
        ///	{&quot;label&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;}]},
        ///].
        /// </summary>
        internal static string CustomAccessProtocols {
            get {
                return ResourceManager.GetString("CustomAccessProtocols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;&lt;/head&gt;
        ///	&lt;style&gt;
        ///		body {
        ///			margin: 0;
        ///		}
        ///		body, table {
        ///			font-size: 12px;
        ///			font-family: &apos;Segoe UI&apos;, &apos;Tahoma&apos;, &apos;Arial&apos;, &apos;Helvetica&apos;, sans-serif;
        ///		}
        ///		td {
        ///			vertical-align: top;
        ///		}
        ///		.bold {
        ///			font-weight: 700;
        ///		}
        ///		.space-before {
        ///			padding-top: 10px;
        ///		}
        ///		.fixed {
        ///			font-family: &apos;Consolas&apos;, &apos;DejaVu Sans Mono&apos;, monospace;
        ///		}
        ///	&lt;/style&gt;
        ///	&lt;body style=&quot;background-color: rgb(230, 150, 100)&quot;&gt;
        ///		&lt;table&gt;
        ///			&lt;tr&gt;
        ///				&lt;td colspan=&quot;3&quot; class=&quot;bold&quot;&gt;Name:&lt;/td&gt;
        ///		 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string elar {
            get {
                return ResourceManager.GetString("elar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;mets ID=&quot;sort-mets_mets&quot; OBJID=&quot;sword-mets&quot; LABEL=&quot;DSpace SWORD Item&quot; PROFILE=&quot;DSpace SIL SIP Profile 1.0&quot; xmlns=&quot;http://www.loc.gov/METS/&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.loc.gov/METS/ http://www.loc.gov/standards/mets/mets.xsd&quot;&gt;
        ///  &lt;metsHdr/&gt;
        ///  &lt;dmdSec ID=&quot;ramp-mets-dmd-2&quot; GROUPID=&quot;ramp-mets-dmd-2_group-1&quot;&gt;
        ///	&lt;mdWrap LABEL=&quot;RAMP Metadata&quot; MDTYPE=&quot;OTHER&quot; OTHERMDTYPE=&quot;SIL. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EmptyMets {
            get {
                return ResourceManager.GetString("EmptyMets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;&lt;/head&gt;
        ///	&lt;body&gt;
        ///		
        ///	&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string reap {
            get {
                return ResourceManager.GetString("reap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;&lt;/head&gt;
        ///	&lt;style&gt;
        ///		body {
        ///			margin: 0;
        ///		}
        ///		body, table {
        ///			font-size: 12px;
        ///			font-family: &apos;Segoe UI&apos;, &apos;Tahoma&apos;, &apos;Arial&apos;, &apos;Helvetica&apos;, sans-serif;
        ///		}
        ///		td {
        ///			vertical-align: top;
        ///		}
        ///		.bold {
        ///			font-weight: 700;
        ///		}
        ///		.space-before {
        ///			padding-top: 10px;
        ///		}
        ///		.fixed {
        ///			font-family: &apos;Consolas&apos;, &apos;DejaVu Sans Mono&apos;, monospace;
        ///		}
        ///		.nowrap { white-space: nowrap; }
        ///	&lt;/style&gt;
        ///	&lt;body style=&quot;background-color: rgb(230, 150, 100)&quot;&gt;
        ///		&lt;table&gt;
        ///			&lt;tr&gt;
        ///				&lt;td col [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tla {
            get {
                return ResourceManager.GetString("tla", resourceCulture);
            }
        }
    }
}
